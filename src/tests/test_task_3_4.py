"""
Тесты для задания 3.4.
"""

from unittest import TestCase, main
from tasks import task_3_4


class TestPluralize(TestCase):

    def test_pluralize__CorrectArguments__ShouldReturnCorrectResult(self):
        """
        Проверяет работу с корректными данными.
        """

        data = [
            # Женский род.
            (("штука", "штуки", "штук"), -30, "штук"),
            (("штука", "штуки", "штук"), -25, "штук"),
            (("штука", "штуки", "штук"), -24, "штуки"),
            (("штука", "штуки", "штук"), -22, "штуки"),
            (("штука", "штуки", "штук"), -21, "штука"),
            (("штука", "штуки", "штук"), -20, "штук"),
            (("штука", "штуки", "штук"),  -5, "штук"),
            (("штука", "штуки", "штук"),  -4, "штуки"),
            (("штука", "штуки", "штук"),  -2, "штуки"),
            (("штука", "штуки", "штук"),  -1, "штука"),
            (("штука", "штуки", "штук"),   0, "штук"),
            (("штука", "штуки", "штук"),   1, "штука"),
            (("штука", "штуки", "штук"),   2, "штуки"),
            (("штука", "штуки", "штук"),   4, "штуки"),
            (("штука", "штуки", "штук"),   5, "штук"),
            (("штука", "штуки", "штук"),  20, "штук"),
            (("штука", "штуки", "штук"),  21, "штука"),
            (("штука", "штуки", "штук"),  22, "штуки"),
            (("штука", "штуки", "штук"),  24, "штуки"),
            (("штука", "штуки", "штук"),  25, "штук"),
            (("штука", "штуки", "штук"),  30, "штук"),

            # Мужской род
            (("грамм", "грамма", "граммов"), -30, "граммов"),
            (("грамм", "грамма", "граммов"), -25, "граммов"),
            (("грамм", "грамма", "граммов"), -24, "грамма"),
            (("грамм", "грамма", "граммов"), -22, "грамма"),
            (("грамм", "грамма", "граммов"), -21, "грамм"),
            (("грамм", "грамма", "граммов"), -20, "граммов"),
            (("грамм", "грамма", "граммов"),  -5, "граммов"),
            (("грамм", "грамма", "граммов"),  -4, "грамма"),
            (("грамм", "грамма", "граммов"),  -2, "грамма"),
            (("грамм", "грамма", "граммов"),  -1, "грамм"),
            (("грамм", "грамма", "граммов"),   0, "граммов"),
            (("грамм", "грамма", "граммов"),   1, "грамм"),
            (("грамм", "грамма", "граммов"),   2, "грамма"),
            (("грамм", "грамма", "граммов"),   4, "грамма"),
            (("грамм", "грамма", "граммов"),   5, "граммов"),
            (("грамм", "грамма", "граммов"),  20, "граммов"),
            (("грамм", "грамма", "граммов"),  21, "грамм"),
            (("грамм", "грамма", "граммов"),  22, "грамма"),
            (("грамм", "грамма", "граммов"),  24, "грамма"),
            (("грамм", "грамма", "граммов"),  25, "граммов"),
            (("грамм", "грамма", "граммов"),  30, "граммов"),

            # Средний род
            (("число", "числа", "чисел"), -30, "чисел"),
            (("число", "числа", "чисел"), -25, "чисел"),
            (("число", "числа", "чисел"), -24, "числа"),
            (("число", "числа", "чисел"), -22, "числа"),
            (("число", "числа", "чисел"), -21, "число"),
            (("число", "числа", "чисел"), -20, "чисел"),
            (("число", "числа", "чисел"),  -5, "чисел"),
            (("число", "числа", "чисел"),  -4, "числа"),
            (("число", "числа", "чисел"),  -2, "числа"),
            (("число", "числа", "чисел"),  -1, "число"),
            (("число", "числа", "чисел"),   0, "чисел"),
            (("число", "числа", "чисел"),   1, "число"),
            (("число", "числа", "чисел"),   2, "числа"),
            (("число", "числа", "чисел"),   4, "числа"),
            (("число", "числа", "чисел"),   5, "чисел"),
            (("число", "числа", "чисел"),   20, "чисел"),
            (("число", "числа", "чисел"),   21, "число"),
            (("число", "числа", "чисел"),   22, "числа"),
            (("число", "числа", "чисел"),   24, "числа"),
            (("число", "числа", "чисел"),   25, "чисел"),
            (("число", "числа", "чисел"),   30, "чисел")
        ]

        for forms, amount, result in data:
            with self.subTest():
                self.assertEqual(task_3_4.pluralize(forms, amount), result, f"forms={forms}, amount={amount}")


if __name__ == "__main__":
    main(verbosity=2)
